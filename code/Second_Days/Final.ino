/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/ea626775-ca55-4088-8556-81b1b9834490 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  String alert_msg;
  int current_Person_amount;
  int overall_Person_amount;
  bool alert_status;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include <Arduino_MKRIoTCarrier.h>
MKRIoTCarrier carrier;

#define check_in A4
#define check_out A1

#define Object1 A2
#define Object2 A3
#define Object3 A5

int IRValue1,IRValue2,IRValue3,IRValueIN,IRValueOUT;
int stolen_object;
bool alert;

void setup() {
  carrier.noCase();
  carrier.begin();
  
  //Defind All Pins
  pinMode(Object1, INPUT);
  pinMode(Object2, INPUT);
  pinMode(Object3, INPUT);
  pinMode(check_in, INPUT);
  pinMode(check_out, INPUT);
  

  //start serial
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500);



  // Defined in thingProperties.h
  initProperties();
  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  current_Person_amount = 0;
  overall_Person_amount = 0;
  alert = false;
  alert_msg = "Everything seem to be OK";
  
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
  
  ArduinoCloud.update();
  carrier.Buzzer.beep();
  
  Serial.println("GET READY");
}

void loop() {
  ArduinoCloud.update();
  //read all IR value first
  IRValue1 = digitalRead(Object1);
  IRValue2 = digitalRead(Object2);
  IRValue3 = digitalRead(Object3);
  IRValueIN = digitalRead(check_in);
  IRValueOUT = digitalRead(check_out);
  
  //Check IN OUT Perso
  
  if(IRValueIN == 0){
    current_Person_amount += 1;
    overall_Person_amount +=1;
    carrier.Buzzer.beep();
    if(current_Person_amount > 4){
      alert_msg = "Currently Full Please wait for next person so you can join";
    }
    while(IRValueIN == 0){
      IRValueIN = digitalRead(check_in);
    }
  }
  else if(IRValueOUT == 0){
    current_Person_amount -= 1;
    carrier.Buzzer.beep();
    while(IRValueOUT == 0){
      IRValueOUT = digitalRead(check_out);
    }
  }
  
  if (IRValue1 == 1){
    alert = true;
    alert_msg = "Object 1 get stolen at time:";
  }
  if (IRValue2 == 1){
    alert = true;
    alert_msg = "Object 2 get stolen at time:";
  }
  if (IRValue3 == 1){
    alert = true;
    alert_msg = "Object 3 get stolen at time:";
  }
  
  if(alert == true){
    if(alert_status == true){
      carrier.Buzzer.beep();
    }
  }
}

void onAlertStatusChange()  {
  Serial.println(alert_status);
}





